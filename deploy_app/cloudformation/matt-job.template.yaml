AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template to deploy Project Matt to run in your AWS Account.'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "AWS S3 Bucket and Prefix Paths"
        Parameters:
          - TargetS3Bucket
          - TargetS3Prefix
      -
        Label:
          default: "Redis Cluster Configuration Settings"
        Parameters:
          - RedisHost
          - RedisPort
          - RedisPasswd
          - RedisDatabase
      -
        Label:
          default: "Elasticsearch Cluster Configuration Settings"
        Parameters:
          - ElasticsearchHost
          - ElasticsearchUser
          - ElasticsearchPasswd
    ParameterLabels:
      TargetS3Bucket:
        default: "S3 Bucket your want to scan for PII in this region"
      TargetS3Prefix:
        default: "Specify prefix inside the above bucket"
Parameters:
  RedisHost:
    Type: String
    Description: 'The host name of your redis cluster'
    ConstraintDescription: 'Provide Redis Cluster host name: `RedisHost`'
  RedisPort:
    Type: Number
    Description: 'The port name of your redis cluster'
    ConstraintDescription: 'Provide Redis Cluster port number: `RedisPort`'
    MinValue: 1150
    MaxValue: 65535
  RedisPasswd:
    NoEcho: true
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]*$
    Description: 'The password name of your redis cluster: `RedisPasswd`'
    Default: ''
  RedisDatabase:
    Type: String
    Description: 'Redis database to use. Default is `0`'
    Default: '0'
  ElasticsearchHost:
    Type: String
    Description: 'Host name and port of your elasticsearch cluster'
    ConstraintDescription: '`ElasticsearchHost` cannot be empty. Format: `<hostname>:<port>`'
  ElasticsearchUser:
    Type: String
    Description: 'HTTP authentication username of your elasticsearch cluster'
    ConstraintDescription: '`ElasticsearchUser` cannot be empty. E.g: elastic'
  ElasticsearchPasswd:
    NoEcho: true
    Type: String
    Description: 'HTTP authentication username of your elasticsearch cluster'
    AllowedPattern: ^[a-zA-Z0-9]*$
    ConstraintDescription: '`ElasticsearchPasswd` cannot be empty. E.g: somePassword555'
  TargetS3Bucket:
    Type: String
    Description: 'AWS S3 Bucket to scan for PII. Specify without `s3://`'
    ConstraintDescription: '`TargetS3Bucket` cannot be empty. E.g: some-s3-bucket'
  TargetS3Prefix:
    Type: String
    Description: 'AWS S3 Prefix to scan for PII. Defaults to parent path in bucket'
    Default: ''
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for the EC2 instances launched into the VPC
        by Batch
      VpcId:
        Ref: VPC
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: VPC
      MapPublicIpOnLaunch: 'True'
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: Subnet
  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: batch.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - Ref: EcsInstanceRole
  EcsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
  SpotIamFleetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: spotfleet.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole
  ProdApplicationJob:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      ContainerProperties:
        Image: !Sub "514965996716.dkr.ecr.eu-west-1.amazonaws.com/datafy/project-matt:latest"
        Vcpus: 8
        Memory: 16000
        Command:
        - echo
        - Hello World, I am a high priority job
        Environment:
          - Name: MY_S3_BUCKET
            Value: !Ref TargetS3Bucket
          - Name: MY_S3_PREFIX
            Value: !Ref TargetS3Prefix
          - Name: REDIS_HOST
            Value: !Ref RedisHost
          - Name: REDIS_PASSWD
            Value: !Ref RedisPasswd
          - Name: REDIS_PORT
            Value: !Ref RedisPort
          - Name: REDIS_DB
            Value: !Ref RedisDatabase
          - Name: ES_HOST
            Value: !Ref ElasticsearchHost
          - Name: ES_USERNAME
            Value: !Ref ElasticsearchUser
          - Name: ES_PASSWD
            Value: !Ref ElasticsearchPasswd
      RetryStrategy:
        Attempts: 1
  TestApplicationJob:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      ContainerProperties:
        Image: !Sub "514965996716.dkr.ecr.eu-west-1.amazonaws.com/datafy/project-matt:latest"
        Vcpus: 2
        Memory: 2000
        Command:
        - echo
        - Hello World, I am a low priority job
        Environment:
        - Name: MY_S3_BUCKET
          Value: !Ref TargetS3Bucket
        - Name: MY_S3_PREFIX
          Value: !Ref TargetS3Prefix
        - Name: REDIS_HOST
          Value: !Ref RedisHost
        - Name: REDIS_PASSWD
          Value: !Ref RedisPasswd
        - Name: REDIS_PORT
          Value: !Ref RedisPort
        - Name: REDIS_DB
          Value: !Ref RedisDatabase
        - Name: ES_HOST
          Value: !Ref ElasticsearchHost
        - Name: ES_USERNAME
          Value: !Ref ElasticsearchUser
        - Name: ES_PASSWD
          Value: !Ref ElasticsearchPasswd
      RetryStrategy:
        Attempts: 1
  HighPriorityJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      ComputeEnvironmentOrder:
      - Order: 1
        ComputeEnvironment:
          Ref: SpotComputeEnvironment

  BatchJobLambdaScheduler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: job_trigger.lambda_handler
      Runtime: python3.6
      CodeUri: ../lambda/job_trigger.py
      VpcConfig:
        Subnets:
        - Ref: Subnet
        SecurityGroupIds:
        - Ref: SecurityGroup
      Environment:
        Variables:
          JobName: !Ref ProdApplicationJob
          JobQueue: !Ref HighPriorityJobQueue
          JobDefinition: !Ref ProdApplicationJob
      Events:
        StartJob:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)

  SpotComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeResources:
        Type: SPOT
        MinvCpus: 0
        DesiredvCpus: 0
        MaxvCpus: 64
        InstanceTypes:
        - optimal
        Subnets:
        - Ref: Subnet
        SecurityGroupIds:
        - Ref: SecurityGroup
        InstanceRole:
          Ref: IamInstanceProfile
        BidPercentage: 40
        SpotIamFleetRole:
          Ref: SpotIamFleetRole
      ServiceRole:
        Ref: BatchServiceRole
Outputs:
  ProdApplicationJobArn:
    Value:
      Ref: ProdApplicationJob
  TestApplicationJobArn:
    Value:
      Ref: TestApplicationJob
  HighPriorityJobQueueArn:
    Value:
      Ref: HighPriorityJobQueue
  SpotComputeEnvironmentArn:
    Value:
      Ref: SpotComputeEnvironment
Transform: AWS::Serverless-2016-10-31
